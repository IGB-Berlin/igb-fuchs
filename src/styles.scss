/** This file is part of IGB-FUCHS.
 *
 * Copyright © 2024-2025 Hauke Dämpfling (haukex@zero-g.net)
 * at the Leibniz Institute of Freshwater Ecology and Inland Fisheries (IGB),
 * Berlin, Germany, <https://www.igb-berlin.de/>
 *
 * IGB-FUCHS is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later version.
 *
 * IGB-FUCHS is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * IGB-FUCHS. If not, see <https://www.gnu.org/licenses/>.
 */

@use "../node_modules/bootstrap/scss/bootstrap" as bs;
bs.$color-mode-type: media-query;  // can ignore the error shown in VSCode here, it's fine

:root {
  // darker color variants = foreground
  --igb-green-fg: #819F00;
  --leibniz-blue-fg: #003D72;
  // lighter color variants = background
  --igb-green-bg: #9DBD15;
  --leibniz-blue-bg: #006EB7;
}
.d-ib-light { display: inline-block; }
.d-ib-dark { display: none; }

@include bs.color-mode(dark) {
  :root {
    // darker color variants = background
    --igb-green-bg: #819F00;
    --leibniz-blue-bg: #003D72;
    // lighter color variants = foreground
    --igb-green-fg: #9DBD15;
    --leibniz-blue-fg: #006EB7;
  }
  .d-ib-light { display: none; }
  .d-ib-dark { display: inline-block; }
}

.text-igb-green {
  color: var(--igb-green-fg);
}
.bg-igb-green {
  background-color: var(--igb-green-bg);
}
.text-leibniz-blue {
  color: var(--leibniz-blue-fg);
}
.bg-leibniz-blue {
  background-color: var(--leibniz-blue-bg);
}

@include bs.media-breakpoint-up(sm) {
  .text-end-sm {
    text-align: right;
  }
}

.text-bg-tertiary {
  color: var(--#{bs.$prefix}body-color);
  background-color: var(--#{bs.$prefix}tertiary-bg);
}
.cursor-pointer {
  cursor: pointer;
}
.cursor-auto {
  cursor: auto;
}

.mini-meas-edit {
  min-width: 4em !important;
}

// Inject arrows between nav-links
.navbar-nav .nav-link + .nav-link {
  padding-left: 0;
  &::before {
    content: '»';
    padding-right: bs.$navbar-nav-link-padding-x;
  }
}
// mark unsaved editors in the title bar
.navbar-nav .nav-link.unsaved::after { content: '*' }

#navPageTitle {
  font-size: var(--#{bs.$prefix}nav-link-font-size);
  font-weight: bold;
}

.badge.sm-badge {
  font-size: 0.7rem;
}

.editor-stack {
  max-width: 60rem;
  margin-left: auto;
  margin-right: auto;
}

body[data-selected-language="en"] [lang="de"] {
  display: none;
}
body[data-selected-language="de"] [lang="en"] {
  display: none;
}

body.hide-help-texts {
  .manual-help:not(.manual-help-show) { display: none !important; }
}
body:not(.hide-help-texts) {
  .help-button { display: none; }
}

.list-group-item:has( .mini-meas-edit ) {
  padding: bs.$spacer * 0.25;
}

// The following overrides the Bootstrap defaults for validated forms
.custom-checklist {
  .list-group-item:has( .form-check-input:not(:checked) ) {
    background-color: var(--#{bs.$prefix}warning-bg-subtle);
  }
  .form-check-input:not(:checked) {
    border-color: var(--#{bs.$prefix}warning-border-subtle);
    & ~ .form-check-label { color: var(--#{bs.$prefix}warning-text-emphasis) }
  }
}

.custom-tasklist {
  .custom-cb-btn {
    text-wrap: nowrap;
    padding: bs.$btn-padding-y bs.$btn-padding-x;
    border-width: var(--#{bs.$prefix}border-width);
    border-style: var(--#{bs.$prefix}border-style);
    border-radius: var(--#{bs.$prefix}border-radius);

    background-color: var(--#{bs.$prefix}warning-bg-subtle);
    border-color: var(--#{bs.$prefix}warning-border-subtle);
    .form-check-input:not(:checked) {
      border-color: var(--#{bs.$prefix}warning-border-subtle);
      & ~ .form-check-label {
        color: var(--#{bs.$prefix}warning-text-emphasis);
      }
    }

    &:has( > .form-check-input:checked ) {
      background-color: var(--#{bs.$prefix}success-bg-subtle);
      border-color: var(--#{bs.$prefix}success-border);
      color: var(--#{bs.$prefix}success-text-emphasis);
    }
  }
}

.slider-bar {
  width: 25rem;  // seems good
  min-width: max-content;
  height: 2rem;  // approximately the same height as a small Bootstrap button (good enough)
  .slider-button {
    height: inherit;
    user-select: none;
  }
}

/* The nestings of pages are:
 * - samp-log  -> location -> sample    -> meas -> meas-type
 * - samp-proc -> loc-temp -> samp-temp         -> meas-type
 * - samp-proc             -> samp-temp         -> meas-type
 * Idea: Colors of rainbow, except: yellow, orange, red, green, since those are used for status indications
 * https://graphicdesign.stackexchange.com/a/142510
 */
.editor-samp-log-text  { color: bs.$cyan-600 !important }
.editor-samp-proc-text { color: bs.$cyan-600 !important }
.editor-location-text  { color: bs.$blue-600 !important }
.editor-loc-temp-text  { color: bs.$blue-600 !important }
.editor-sample-text    { color: bs.$indigo-600 !important }
.editor-samp-temp-text { color: bs.$indigo-600 !important }
.editor-meas-text      { color: bs.$purple-600 !important }
.editor-meas-type-text { color: bs.$pink-600 !important }
@include bs.color-mode(dark) {
  .editor-samp-log-text  { color: bs.$cyan-300 !important }
  .editor-samp-proc-text { color: bs.$cyan-300 !important }
  .editor-location-text  { color: bs.$blue-300 !important }
  .editor-loc-temp-text  { color: bs.$blue-300 !important }
  .editor-sample-text    { color: bs.$indigo-300 !important }
  .editor-samp-temp-text { color: bs.$indigo-300 !important }
  .editor-meas-text      { color: bs.$purple-300 !important }
  .editor-meas-type-text { color: bs.$pink-300 !important }
}
// the "!important" in the above classes overrides the normal styling, so make active link bold instead:
.navbar-nav .nav-link.active { font-weight: bold; }
